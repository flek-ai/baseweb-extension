/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// BASEUI-GENERATED-REACT-ICON
// DO NOT EDIT THIS FILE DIRECTLY, SEE README.md
import * as React from "react";
import { useStyletron } from "baseui/styles";
import { mergeOverride, toObjectOverride } from "../helpers/overrides";

import Icon from "./icon";
import type { IconProps } from "./types";

const customIcons = {
  car: {
    title: "Car",
    path: (
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6.80843 3C5.86536 3 5.05043 3.6588 4.85283 4.58094L3.63644 10.2575C3.29513 10.4497 3.01114 10.7417 2.82918 11.1056L2.21115 12.3416C2.07229 12.6194 2 12.9256 2 13.2361V19C2 20.1046 2.89543 21 4 21H6C7.10457 21 8 20.1046 8 19H16C16 20.1046 16.8954 21 18 21H20C21.1046 21 22 20.1046 22 19V13.2361C22 12.9256 21.9277 12.6194 21.7889 12.3416L21.1708 11.1056C20.9889 10.7417 20.7049 10.4498 20.3636 10.2575L19.1472 4.58094C18.9496 3.6588 18.1347 3 17.1916 3H6.80843ZM20 13.5H17C16.4477 13.5 16 13.9477 16 14.5C16 15.0523 16.4477 15.5 17 15.5H20V19H18V17H6V19H4V15.5H7C7.55228 15.5 8 15.0523 8 14.5C8 13.9477 7.55228 13.5 7 13.5H4V13.2361L4.61803 12H19.382L20 13.2361V13.5ZM18.263 10L17.1916 5L6.80843 5L5.73701 10H18.263Z"
      />
    ),
  },
  shoppingCart: {
    title: "Shopping Cart",
    path: (
      <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
    )
  }
};


type CustomIconType = keyof typeof customIcons;

// @ts-ignore
function ListIconWithType(type: CustomIconType) {
  return function ListIcon(props: IconProps, ref) {
    const [, theme] = useStyletron();
    const {
      title = customIcons[type].title,
      size,
      color,
      overrides = {},
      ...restProps
    } = props;
    const SvgOverride = mergeOverride(
      // Icons from the theme target the SVG override in the underlying Icon component
      {
        // @ts-ignore
        component: theme.icons ? theme.icons : null,
      },
      overrides && overrides.Svg ? toObjectOverride(overrides.Svg) : {}
    );
    return (
      <Icon
        viewBox="0 0 24 24"
        ref={ref}
        title={title}
        size={size}
        color={color}
        overrides={{ Svg: SvgOverride }}
        {...restProps}
      >
        {customIcons[type].path}
      </Icon>
    );
  };
}

function ListIcons(type: CustomIconType) {
  return React.forwardRef<SVGSVGElement, IconProps>(ListIconWithType(type));
}

export { ListIcons };
