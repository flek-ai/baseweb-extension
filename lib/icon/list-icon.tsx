/*
Copyright (c) Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
// BASEUI-GENERATED-REACT-ICON
// DO NOT EDIT THIS FILE DIRECTLY, SEE README.md
import * as React from "react";
import { useStyletron } from "baseui/styles";
import { mergeOverride, toObjectOverride } from "../helpers/overrides";

import Icon from "./icon";
import type { IconProps } from "./types";

const customIcons = {
  car: {
    title: "Car",
    path: (
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6.80843 3C5.86536 3 5.05043 3.6588 4.85283 4.58094L3.63644 10.2575C3.29513 10.4497 3.01114 10.7417 2.82918 11.1056L2.21115 12.3416C2.07229 12.6194 2 12.9256 2 13.2361V19C2 20.1046 2.89543 21 4 21H6C7.10457 21 8 20.1046 8 19H16C16 20.1046 16.8954 21 18 21H20C21.1046 21 22 20.1046 22 19V13.2361C22 12.9256 21.9277 12.6194 21.7889 12.3416L21.1708 11.1056C20.9889 10.7417 20.7049 10.4498 20.3636 10.2575L19.1472 4.58094C18.9496 3.6588 18.1347 3 17.1916 3H6.80843ZM20 13.5H17C16.4477 13.5 16 13.9477 16 14.5C16 15.0523 16.4477 15.5 17 15.5H20V19H18V17H6V19H4V15.5H7C7.55228 15.5 8 15.0523 8 14.5C8 13.9477 7.55228 13.5 7 13.5H4V13.2361L4.61803 12H19.382L20 13.2361V13.5ZM18.263 10L17.1916 5L6.80843 5L5.73701 10H18.263Z"
      />
    ),
  },
  shoppingCart: {
    title: "Shopping Cart",
    path: (
      <path fill="none" d="M2.25 3H3.63568C4.14537 3 4.59138 3.34265 4.7227 3.83513L5.1059 5.27209M7.5 14.25C5.84315 14.25 4.5 15.5931 4.5 17.25H20.25M7.5 14.25H18.7183C19.8394 11.9494 20.8177 9.56635 21.6417 7.1125C16.88 5.89646 11.8905 5.25 6.75 5.25C6.20021 5.25 5.65214 5.2574 5.1059 5.27209M7.5 14.25L5.1059 5.27209M6 20.25C6 20.6642 5.66421 21 5.25 21C4.83579 21 4.5 20.6642 4.5 20.25C4.5 19.8358 4.83579 19.5 5.25 19.5C5.66421 19.5 6 19.8358 6 20.25ZM18.75 20.25C18.75 20.6642 18.4142 21 18 21C17.5858 21 17.25 20.6642 17.25 20.25C17.25 19.8358 17.5858 19.5 18 19.5C18.4142 19.5 18.75 19.8358 18.75 20.25Z" stroke="#0F172A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
    ),
  },
};

type CustomIconType = keyof typeof customIcons;

// @ts-ignore
function ListIconWithType(type: CustomIconType) {
  return function ListIcon(props: IconProps, ref) {
    const [, theme] = useStyletron();
    const {
      title = customIcons[type].title,
      size,
      color,
      overrides = {},
      ...restProps
    } = props;
    const SvgOverride = mergeOverride(
      // Icons from the theme target the SVG override in the underlying Icon component
      {
        // @ts-ignore
        component: theme.icons ? theme.icons : null,
      },
      overrides && overrides.Svg ? toObjectOverride(overrides.Svg) : {}
    );
    return (
      <Icon
        viewBox="0 0 24 24"
        ref={ref}
        title={title}
        size={size}
        color={color}
        overrides={{ Svg: SvgOverride }}
        {...restProps}
      >
        {customIcons[type].path}
      </Icon>
    );
  };
}

function ListIcons(type: CustomIconType) {
  return React.forwardRef<SVGSVGElement, IconProps>(ListIconWithType(type));
}

export { ListIcons };
